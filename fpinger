#!/usr/bin/env ruby
require "ouisearch"

NETMASK=ARGV.shift

REG_ALIVE=/^(.+) is alive$/
REG_ARP=/([^: ]{1,2}):([^: ]{1,2}):([^: ]{1,2}):([^: ]{1,2}):([^: ]{1,2}):([^: ]{1,2})/

def fill_0 str
  if str.length <= 1
    return "0" + str
  end
  return str
end

def arp addr
  io = IO.popen("arp #{addr}")
  data = io.read
  io.close

  line = data.split("\n")[-1]
  match = line.match(REG_ARP)
  macaddr = match[1,6].map{|elm| fill_0(elm)}.join(":")

  return macaddr
end

alives = {}
ouisearch = OuiSearch.new

io = IO.popen("fping -g #{NETMASK} 2>/dev/null")

while line = io.gets
  break if line == nil or line.length == 0

  match = line.match(REG_ALIVE)
  next unless match

  addr = match[1]
  macaddr = arp(addr)
  oui = ouisearch.execute(macaddr[0,8])

  alives[addr] = {:macaddr => macaddr, :oui => oui}
end

io.close

alives.sort_by{|a| a[0].split(".").map{|i| i.to_i}}.each do |k, v|
  puts "#{k}\t#{v[:macaddr]}\t#{v[:oui]}"
end
